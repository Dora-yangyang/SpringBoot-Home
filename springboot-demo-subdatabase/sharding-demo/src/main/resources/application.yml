# 数据源 ds0,ds1
sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      # 第一个数据库
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://47.98.178.84:3306/ds0?characterEncoding=utf-8
        username: ds0
        password: password
      # 第二个数据库
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://47.98.178.84:3306/ds1?characterEncoding=utf-8
        username: ds1
        password: password

    # 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
    # 分库策略
    config:
      sharding:
        default-database-strategy:
          inline:
            sharding-column: id
            algorithm-expression: ds$->{id % 2}

        # 分表策略 其中user为逻辑表 分表主要取决于user_age行
        tables:
          user:
            actual-data-nodes: ds$->{0..1}.user_$->{0..1}
            table-strategy:
              inline:
                sharding-column: user_age
                # 分片算法表达式
                algorithm-expression: user_$->{user_age % 2}

      # 打印执行的数据库以及语句
      props..sql.show: true
# bean被重复定义时覆盖
spring:
  main:
    allow-bean-definition-overriding: true
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: cn.van.sharding.demo.entity